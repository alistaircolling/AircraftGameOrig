<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="1920" height="1080" xmlns:components="view.components.*" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import model.vo.ReceivedDataVO;
			
			import utils.DataUtils;
			
			
			public function setData( vo:ReceivedDataVO ):void{
				
				//set switches first so buttons know which buttons to display vos
				inputPanel.nff.switchDirection = true;
				inputPanel.turnaround.switchDirection = true;
				inputPanel.reliability.switchDirection = false;
				
				
				inputPanel.spares.sparesInc = 1;//hard coded for the moment - not passed in xml
				inputPanel.spares.costInc = vo.sparesCostInc;
				inputPanel.spares.sparesInit = vo.currentSpares;//initialize the value --set this first to make buttons display correctly 
				
				//reset the sparesCurr so it knows that this has been set but the black box, not updated by the user (and so does not update the budget)
				if (vo.iteration==0){
					inputPanel.spares.systemUpdateSpares(vo.currentSpares);
				}else{
					inputPanel.spares.sparesCurr = vo.currentSpares; 
				}
				
				
				//set the initval objects to check we dont go below them
				inputPanel.reliability.initVal = vo.currentReliability;
				inputPanel.turnaround.initVal = vo.currentTuranaround;
				inputPanel.nff.initVal = vo.currentNFF;
				
				
				
				
				inputPanel.reliablityVal = vo.currentReliability;
				inputPanel.turnaroundVal = vo.currentTuranaround;
				inputPanel.nffVal = vo.currentNFF;
				
				//set new vectors
				inputPanel.reliabilityValues = vo.reliability;
				inputPanel.turnaroundValues = vo.turnaround;
				inputPanel.nffValues = vo.nff;
				//resetn current indices to 0
				
				
				inputPanel.nff.currIndex = 0;
				inputPanel.turnaround.currIndex = 0;
				inputPanel.reliability.currIndex = 0;
				//set current values - not needed aas index is returned not the val
				/* 
				inputPanel.nff.currVal = vo.nff[0]
				inputPanel.turnaround.currVal = vo.turnaround[0];
				inputPanel.reliability.currVal = vo.reliability[0]; */
				
				//set the current values
				//set the currvals so they are not null
				inputPanel.reliability.currVal = vo.currentReliability;
				inputPanel.turnaround.currVal = vo.currentTuranaround;
				inputPanel.nff.currVal = vo.currentNFF;
				
				
				//todo make a numeric stepper custom component that is passed the vector of input objects and adjusts its own display
				//and also stores the cost of the current value
			}
			
			public function showBalance( n:Number ):void{
				
				budgetIndicator.budget = n;
				inputPanel.spares.budget = n;
				//set balance on custom steppers
				
				inputPanel.spares.budget = n;
				inputPanel.nff.budget = n;
				inputPanel.turnaround.budget = n;
				inputPanel.reliability.budget = n;
				
				inputPanel.budget = n;
				
				
				//if the balance is negative disable all buttons
				if (n<0){
					inputPanel.disableAllButtons();
				}
				
				
			}
			
			
			
		]]>
	</fx:Script>
	<s:Group bottom="50" left="50">
		
		<components:BudgetComponent id="budgetIndicator" />
	</s:Group>
	<s:Group horizontalCenter="0" verticalCenter="246" >
		<components:InputPanel id="inputPanel" verticalCenter="0" horizontalCenter="0"/>
	</s:Group>
	<!-- <s:Group id="lbHolder" right="100" top="200">
	<mx:Image source="@Embed('../embed/lbtop3.png')" smoothBitmapContent="true" />
	<components:LeaderBoard id="leaderBoard" title="Top 3" horizontalCenter="0" top="50"
	visible="true"
	/>
	</s:Group>  -->
</s:Group>
